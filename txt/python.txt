##########################
# iniciando um servidor
python3 -m http.server 8000
############################


#CURSO DE PYTHON

üì¶ Bloco 1: Instalando e Configurando o Ambiente no Termux

# Atualize os pacotes do Termux
pkg update && pkg upgrade

# Instale o Python
pkg install python

# Verifique a instala√ß√£o
python --version

# Instale o pip (gerenciador de pacotes do Python)
pkg install python-pip

# Instale um editor de texto (nano)
pkg install nano

# Instale o git (opcional, para clonar reposit√≥rios)
pkg install git

################################################
üêç Bloco 2: Escrevendo e Executando Seu Primeiro Programa em Python

# Crie um novo arquivo Python
nano hello.py

# Dentro do nano, escreva o seguinte c√≥digo:
print("Ol√°, mundo!")

# Salve e saia do nano:
# Pressione CTRL + X, depois Y e Enter

# Execute o programa
python hello.py
################################################
üßÆ Bloco 3: Conceitos B√°sicos de Python

# Vari√°veis e Tipos de Dados
nome = "Alice"
idade = 30
altura = 1.65
ativo = True

# Opera√ß√µes Matem√°ticas
soma = 10 + 5
produto = 10 * 5
divisao = 10 / 5
resto = 10 % 3

# Entrada de Dados
nome = input("Digite seu nome: ")
print("Ol√°, " + nome)

# Condicionais
if idade >= 18:
    print("Maior de idade")
else:
    print("Menor de idade")

# La√ßos de Repeti√ß√£o
for i in range(5):
    print(i)

contador = 0
while contador < 5:
    print(contador)
    contador += 1
################################################
üìö Bloco 4: Trabalhando com M√≥dulos e Pacotes

# Instale pacotes usando pip
pip install requests
pip install beautifulsoup4

# Exemplo de uso do m√≥dulo requests
import requests

resposta = requests.get("https://www.google.com")
print(resposta.status_code)

################################################
#üóÇÔ∏è Bloco 5: Manipula√ß√£o de Arquivos

 # Escrevendo em um arquivo
with open("arquivo.txt", "w") as f:
    f.write("Ol√°, mundo!")

# Lendo de um arquivo
with open("arquivo.txt", "r") as f:
    conteudo = f.read()
    print(conteudo)


################################################
üß∞ Bloco 6: Fun√ß√µes e Tratamento de Erros

# Definindo uma fun√ß√£o
def saudacao(nome):
    print(f"Ol√°, {nome}!")

saudacao("Alice")

# Tratamento de exce√ß√µes
try:
    numero = int(input("Digite um n√∫mero: "))
    print(10 / numero)
except ValueError:
    print("Voc√™ n√£o digitou um n√∫mero v√°lido.")
except ZeroDivisionError:
    print("N√£o √© poss√≠vel dividir por zero.")

################################################
üß™ Bloco 7: Projetos Pr√°ticos

# Calculadora Simples
def calculadora():
    a = float(input("Digite o primeiro n√∫mero: "))
    b = float(input("Digite o segundo n√∫mero: "))
    operacao = input("Escolha a opera√ß√£o (+, -, *, /): ")

    if operacao == "+":
        print(f"Resultado: {a + b}")
    elif operacao == "-":
        print(f"Resultado: {a - b}")
    elif operacao == "*":
        print(f"Resultado: {a * b}")
    elif operacao == "/":
        if b != 0:
            print(f"Resultado: {a / b}")
        else:
            print("Erro: Divis√£o por zero.")
    else:
        print("Opera√ß√£o inv√°lida.")

calculadora()

################################################
üß† Bloco 8: Avan√ßando no Python


# Programa√ß√£o Orientada a Objetos
class Pessoa:
    def __init__(self, nome, idade):
        self.nome = nome
        self.idade = idade

    def apresentar(self):
        print(f"Ol√°, meu nome √© {self.nome} e tenho {self.idade} anos.")

pessoa1 = Pessoa("Alice", 30)
pessoa1.apresentar()


üìå Dicas Finais

Utilize o comando pip list para ver os pacotes instalados.

Mantenha seus pacotes atualizados com pip install --upgrade nome_do_pacote.

Explore bibliotecas como matplotlib, pandas e numpy para an√°lise de dados e visualiza√ß√µes.

Pratique regularmente para consolidar seu aprendizado.


